<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>日常记录</title>
    <link href="/my-blog/2023/11/01/%E5%A4%A9%E5%9C%B0%E5%B8%B8%E5%B7%9E%E8%AE%B0%E5%BD%95/"/>
    <url>/my-blog/2023/11/01/%E5%A4%A9%E5%9C%B0%E5%B8%B8%E5%B7%9E%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">数据库备份还原<br>mysqldump <span class="hljs-operator">-</span>h192<span class="hljs-number">.168</span><span class="hljs-number">.7</span><span class="hljs-number">.55</span> <span class="hljs-operator">-</span>P13306 <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>pSrm<span class="hljs-variable">@8517</span> srm_prod <span class="hljs-comment">--set-gtid-purged=off &gt;/home/srm_prod20230908.sql</span><br>scp <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>srm_prod20230908.sql root<span class="hljs-variable">@192</span><span class="hljs-number">.168</span><span class="hljs-number">.7</span><span class="hljs-number">.52</span>:<span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>srm_prod20230908.sql<br>mysql <span class="hljs-operator">-</span>uroot <span class="hljs-operator">-</span>p srm_prod20230808 <span class="hljs-operator">&lt;</span> <span class="hljs-operator">/</span>home<span class="hljs-operator">/</span>srm_prod20230908.sql<br></code></pre></td></tr></table></figure><h3 id="JS记录"><a href="#JS记录" class="headerlink" title="JS记录"></a>JS记录</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">去除小数点多余的<span class="hljs-number">0</span>：<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0*$|\.0*$/</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure><h4 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">1、流程节点设置<br></code></pre></td></tr></table></figure><h4 id="BinLog-日志还原"><a href="#BinLog-日志还原" class="headerlink" title="BinLog 日志还原"></a>BinLog 日志还原</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql">cd <span class="hljs-operator">/</span>opt<span class="hljs-operator">/</span>data<span class="hljs-operator">/</span>mysqldata  <span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>  对应binlog日志存放<br><br><span class="hljs-number">606082443</span><br>mysqlbinlog <span class="hljs-comment">--no-defaults -v -v --base64-output=decode-rows mysql-bin.000043 | sed -n &#x27;/# at 606082443/,/COMMIT/p&#x27; &gt; tbl_data.txt</span><br><br>[root<span class="hljs-variable">@db01</span> data]# sed <span class="hljs-string">&#x27;/WHERE/&#123;:a;N;/SET/!ba;s/\([^\n]*\)\n\(.*\)\n\(.*\)/\3\n\2\n\1/&#125;&#x27;</span> tbl_data.txt <span class="hljs-operator">|</span> sed <span class="hljs-operator">-</span>r <span class="hljs-string">&#x27;/WHERE/&#123;:a;N;/@3/!ba;s/###   @2.*//g&#125;&#x27;</span> <span class="hljs-operator">|</span> sed <span class="hljs-string">&#x27;s/### //g;s/\/\*.*/,/g&#x27;</span> <span class="hljs-operator">|</span> sed <span class="hljs-string">&#x27;/WHERE/&#123;:a;N;/@19/!ba;s/,/;/g&#125;;s/#.*//g;s/COMMIT,//g&#x27;</span> <span class="hljs-operator">|</span> sed <span class="hljs-string">&#x27;/^$/d&#x27;</span> <span class="hljs-operator">&gt;</span> recovery.sql<br>sed <span class="hljs-operator">-</span>n <span class="hljs-string">&#x27;/### UPDATE /,/### SET /p&#x27;</span> tbl_data.txt <span class="hljs-operator">|</span><br>sed <span class="hljs-operator">-</span>n <span class="hljs-string">&#x27;/@3\|@19/p&#x27;</span> <span class="hljs-operator">|</span><br>sed <span class="hljs-operator">-</span>r <span class="hljs-string">&#x27;s/.*@3=([^ ]*).*@\d+=&#x27;&#x27;\&#x27;&#x27;([^&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>]<span class="hljs-operator">*</span>)<span class="hljs-string">&#x27;&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>.<span class="hljs-operator">*</span><span class="hljs-operator">/</span><span class="hljs-keyword">UPDATE</span> `srm_prod`.`price_tpl_pt0075_b` <span class="hljs-keyword">set</span> os514 <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;\1&#x27;</span> <span class="hljs-keyword">WHERE</span> id <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;\2&#x27;</span><span class="hljs-operator">/</span>g<span class="hljs-string">&#x27; &gt; recovery.sql</span><br><span class="hljs-string"></span><br><span class="hljs-string">sed -n &#x27;</span><span class="hljs-operator">/</span>### <span class="hljs-keyword">UPDATE</span> <span class="hljs-operator">/</span>,<span class="hljs-operator">/</span>### <span class="hljs-keyword">SET</span> <span class="hljs-operator">/</span>p<span class="hljs-string">&#x27; tbl_data.txt |</span><br><span class="hljs-string">sed -n &#x27;</span><span class="hljs-operator">/</span><span class="hljs-variable">@3</span>\<span class="hljs-operator">|</span><span class="hljs-variable">@19</span><span class="hljs-operator">/</span>p<span class="hljs-string">&#x27; |</span><br><span class="hljs-string">sed -r &#x27;</span>s<span class="hljs-operator">/</span><span class="hljs-operator">^</span>(.<span class="hljs-operator">*</span>)<span class="hljs-variable">@3</span><span class="hljs-operator">=</span>([<span class="hljs-operator">^</span> ]<span class="hljs-operator">*</span>).<span class="hljs-operator">*</span><span class="hljs-variable">@19</span><span class="hljs-operator">=</span>\<span class="hljs-string">&#x27;\&#x27;&#x27;([^&#x27;</span>\<span class="hljs-string">&#x27;&#x27;</span>]<span class="hljs-operator">*</span>)<span class="hljs-string">&#x27;\&#x27;&#x27;.*$/\1UPDATE `\`srm_prod\`.\`price_tpl_pt0075_b\` set os514 = &#x27;</span>\<span class="hljs-number">2</span><span class="hljs-string">&#x27; WHERE id = &#x27;</span>\<span class="hljs-number">3</span><span class="hljs-string">&#x27;\\n/g&#x27;</span> <span class="hljs-operator">&gt;</span> recovery2.sql<br><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">show</span> processlist;<br>kill <span class="hljs-number">150436</span><br><span class="hljs-keyword">SHOW</span> <span class="hljs-keyword">OPEN</span> <span class="hljs-keyword">TABLES</span> <span class="hljs-keyword">where</span> In_use &gt; <span class="hljs-number">0</span>;<br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> information_schema.INNODB_TRX;<br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> INFORMATION_SCHEMA.INNODB_LOCKS;<br><br><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> INFORMATION_SCHEMA.INNODB_LOCK_WAITS;<br></code></pre></td></tr></table></figure><h4 id="数据库备份还原"><a href="#数据库备份还原" class="headerlink" title="数据库备份还原"></a>数据库备份还原</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1</span> 进入数据库存放的具体位置   /var/lib/mysql/<br><span class="hljs-number">2</span> 备份   mysqldump -uroot -p 目标数据库名称 &gt; /home/bak/备份脚本名称.<span class="hljs-keyword">sql</span><br><span class="hljs-number">3</span> 跨机迁移数据 scp /home/bak/目标脚本.<span class="hljs-keyword">sql</span> root@迁移地址:/home/bak/迁移后脚本.<span class="hljs-keyword">sql</span><br><span class="hljs-number">4</span> 手动新建一个数据库<br><span class="hljs-number">5</span> 还原 mysql -uroot -p 手动新建的数据库 &lt; /home/bak/迁移后脚本.<span class="hljs-keyword">sql</span><br><span class="hljs-number">6</span> 远程连接 mysql -h <span class="hljs-number">192.168</span><span class="hljs-number">.7</span><span class="hljs-number">.55</span> -uroot -pSrm@<span class="hljs-number">8517</span> -P13306<br><br>数据库用户创建权限设置<br><span class="hljs-comment">-- 创建用户</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.7.79&#x27;</span>,<span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;td_guest01&#x27;</span>;<br><span class="hljs-comment">-- 给表只读权限</span><br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ON</span> srm_prod.production_return_repair <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.7.79&#x27;</span>,<span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">ON</span> srm_prod.back_repair_send <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.7.79&#x27;</span>,<span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span>;<br><span class="hljs-comment">-- 刷新权限</span><br>FLUSH <span class="hljs-keyword">PRIVILEGES</span>;<br><span class="hljs-comment">-- 取回权限</span><br><span class="hljs-keyword">REVOKE</span> privilege <span class="hljs-keyword">ON</span> srm_prod20230523.back_repair_send <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span>;<br><span class="hljs-comment">-- 查询用户</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br><span class="hljs-comment">-- 取回所有权限针对某个账号</span><br><span class="hljs-keyword">REVOKE</span> <span class="hljs-keyword">ALL</span> <span class="hljs-keyword">PRIVILEGES</span>, <span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">OPTION</span> <span class="hljs-keyword">FROM</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span>;<br><span class="hljs-comment">-- 展示账号的权限</span><br><span class="hljs-keyword">SHOW</span> GRANTS <span class="hljs-keyword">FOR</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.17.5&#x27;</span>;<br><span class="hljs-comment">-- 删除用户</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;guest01&#x27;</span>@<span class="hljs-string">&#x27;192.168.7.79&#x27;</span>; <br></code></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stata">jdbc:mysql:<span class="hljs-comment">//192.168.7.55:13306/srm_prod?characterEncoding=UTF-8&amp;serverTimezone=UTC</span><br>root<br>Srm@8517<br>com.zaxxer.hikari.HikariDataSource<br><br>yum install <span class="hljs-keyword">zip</span> -y<br><span class="hljs-keyword">zip</span> -r zheap0726.<span class="hljs-keyword">zip</span> zheap_localhost.localdomain_20230726150257.hprof<br>docker cp :/logs/zheap0.<span class="hljs-keyword">zip</span> /home<br><br><br>nginx<br><br>awk &#x27;&#123;<span class="hljs-keyword">split</span>(<span class="hljs-variable">$4</span>,array,<span class="hljs-string">&quot;[&quot;</span>);<span class="hljs-keyword">if</span>(array[2]&gt;=<span class="hljs-string">&quot;26/Jul/2023:16:20:05&quot;</span> &amp;&amp; array[2]&lt;=<span class="hljs-string">&quot;26/Jul/2023:16:27:05&quot;</span>)&#123;<span class="hljs-keyword">print</span> <span class="hljs-variable">$0&#125;</span>&#125;&#x27; access.<span class="hljs-keyword">log</span><br><br></code></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-number">55</span>服务器<br>ps -ef | <span class="hljs-keyword">grep</span> activemq<br>netstat -antup | <span class="hljs-keyword">grep</span> <span class="hljs-number">61616</span> <br>firewall-cmd --zone=<span class="hljs-keyword">public</span> --add-port=<span class="hljs-number">8161</span>/tcp --permanent<br>firewall-cmd --zone=<span class="hljs-keyword">public</span> --add-port=<span class="hljs-number">61616</span>/tcp --permanent<br><span class="hljs-regexp">/root/</span>activeMQ<span class="hljs-regexp">/apache-activemq-5.14.5/</span>bin<br>./activemq start<br><br>挂载nfs<br><span class="hljs-number">54</span> <span class="hljs-number">53</span>分别挂载到<span class="hljs-number">55</span><br>mount -t nfs <span class="hljs-number">192.168</span>.<span class="hljs-number">7.55</span>:<span class="hljs-regexp">/nfsshare /</span>app<span class="hljs-regexp">/tsrm/</span>jenkinsPackage<br><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs vim">服务器停机处理<br>分别进入srm前端、sip前端容器  docker exec -it xxx <span class="hljs-keyword">sh</span><br><span class="hljs-keyword">cd</span> /etc/nginx/<span class="hljs-keyword">conf</span>.d<br><span class="hljs-keyword">vi</span> default.xxx   修改location地址为对应的后端地址  保存后 nginx -s reload <br></code></pre></td></tr></table></figure><h4 id="CPU飙升排查"><a href="#CPU飙升排查" class="headerlink" title="CPU飙升排查"></a>CPU飙升排查</h4><p>top -H -p 9  查看CPU占用高的具体线程，发现耗CPU的线程都是比较小的PID，根据经验可知应该是GC的问题</p><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230605135218278.png" alt="image-20230605135218278"></p><h4 id="jmap-histo-9-head-20-前20堆栈查看有没有明显错误"><a href="#jmap-histo-9-head-20-前20堆栈查看有没有明显错误" class="headerlink" title="jmap -histo 9 | head -20  前20堆栈查看有没有明显错误"></a>jmap -histo 9 | head -20  前20堆栈查看有没有明显错误</h4><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230605135357623.png" alt="image-20230605135357623"></p><h4 id="jmap-heap-9-查看gc情况"><a href="#jmap-heap-9-查看gc情况" class="headerlink" title="jmap -heap 9 查看gc情况"></a>jmap -heap 9 查看gc情况</h4><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230605135423240.png" alt="image-20230605135423240"></p><h5 id="下载dump日志进一步分析"><a href="#下载dump日志进一步分析" class="headerlink" title="下载dump日志进一步分析"></a>下载dump日志进一步分析</h5><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">jmap -dump:format=b,file=<span class="hljs-regexp">/logs/</span>zheap_$(hostname)_$(<span class="hljs-built_in">date</span> +<span class="hljs-string">&quot;%Y%m%d%H%M%S&quot;</span>).hprof <span class="hljs-number">9</span><br>jstack -F -m <span class="hljs-number">9</span> &gt;&gt; <span class="hljs-regexp">/logs/</span>zjstack_$(hostname)_$(<span class="hljs-built_in">date</span> +<span class="hljs-string">&quot;%Y%m%d%H%M%S&quot;</span>).<span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><h5 id="分析结果"><a href="#分析结果" class="headerlink" title="分析结果"></a>分析结果</h5><p><img src="file:///D:/soft/企业微信/WXWork/1688851157041117/Cache/Image/2023-06/企业微信截图_16859459636069.png" alt="img"></p><p><img src="file:///D:/soft/企业微信/WXWork/1688851157041117/Cache/Image/2023-06/企业微信截图_16859470992276.png" alt="img"></p><img src="file:///D:/soft/企业微信/WXWork/1688851157041117/Cache/Image/2023-06/企业微信截图_16859470879029.png" alt="img" style="zoom: 50%;" /><p>判断是由于用户使用了合同明细的导出功能导致GC异常从而导致CPU飙升至1000%</p><h3 id="CPU飙升排查2"><a href="#CPU飙升排查2" class="headerlink" title="CPU飙升排查2"></a>CPU飙升排查2</h3><h5 id="下载dump日志进行分析"><a href="#下载dump日志进行分析" class="headerlink" title="下载dump日志进行分析"></a>下载dump日志进行分析</h5><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230616110747670.png" alt="image-20230616110747670"></p><p>发现问题出现在groovy代码块中，继续排查</p><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230616110940883.png" alt="image-20230616110940883"></p><p>发现与订单的查询sql语句有关，继续排查</p><p><img src="file:///D:/soft/企业微信/WXWork/1688851157041117/Cache/Image/2023-06/企业微信截图_16868828363055.png" alt="img"></p><p>找到具体代码块6D5E578AA665F1518A6C，确认是新增/编辑单个入库单接口前-校验入库单信息代码块的问题</p><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230616111434032.png" alt="image-20230616111434032"></p><p>增加判空处理</p><h3 id="CPU飙升排查3"><a href="#CPU飙升排查3" class="headerlink" title="CPU飙升排查3"></a>CPU飙升排查3</h3><p>下载dump日志分析</p><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230703161800596.png" alt="image-20230703161800596"></p><p><img src="C:\Users\19069\AppData\Roaming\Typora\typora-user-images\image-20230703161818129.png" alt="image-20230703161818129"></p><p>结合实际操作情况判断是订单报表导出导致的CPU飙升宕机</p>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>works</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql</title>
    <link href="/my-blog/2023/02/25/sql/"/>
    <url>/my-blog/2023/02/25/sql/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL笔记"><a href="#SQL笔记" class="headerlink" title="SQL笔记"></a>SQL笔记</h1><h2 id="SQL-SELECT-语句"><a href="#SQL-SELECT-语句" class="headerlink" title="SQL SELECT 语句"></a>SQL SELECT 语句</h2><p>从 “Websites” 表中选取 “name” 和 “country” 列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name,country <span class="hljs-keyword">FROM</span> Websites;<br></code></pre></td></tr></table></figure><p>从 “Websites” 表中选取所有列：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">ELECT <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites;<br></code></pre></td></tr></table></figure><h2 id="SQL-SELECT-DISTINCT-语句"><a href="#SQL-SELECT-DISTINCT-语句" class="headerlink" title="SQL SELECT DISTINCT 语句"></a>SQL SELECT DISTINCT 语句</h2><p>仅从 “Websites” 表的 “country” 列中选取唯一不同的值，也就是去掉 “country” 列重复值：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> country <span class="hljs-keyword">FROM</span> Websites;<br></code></pre></td></tr></table></figure><h2 id="SQL-WHERE-子句"><a href="#SQL-WHERE-子句" class="headerlink" title="SQL WHERE 子句"></a>SQL WHERE 子句</h2><p>从 “Websites” 表中选取国家为 “CN” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites <span class="hljs-keyword">WHERE</span> country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CN&#x27;</span>;<br></code></pre></td></tr></table></figure><p>如果是数值字段，请不要使用引号</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h2 id="SQL-AND-amp-OR-运算符"><a href="#SQL-AND-amp-OR-运算符" class="headerlink" title="SQL AND &amp; OR 运算符"></a>SQL AND &amp; OR 运算符</h2><p>从 “Websites” 表中选取国家为 “CN” 且alexa排名大于 “50” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">where</span> country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CN&#x27;</span><br><span class="hljs-keyword">and</span> alexa<span class="hljs-operator">&gt;</span><span class="hljs-number">50</span><br></code></pre></td></tr></table></figure><p>从 “Websites” 表中选取国家为 “USA” 或者 “CN” 的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">where</span> country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;USA&#x27;</span><br><span class="hljs-keyword">or</span> country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;CN&#x27;</span><br></code></pre></td></tr></table></figure><p>从 “Websites” 表中选取 alexa 排名大于 “15” 且国家为 “CN” 或 “USA” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">where</span> alexa <span class="hljs-operator">&gt;</span> <span class="hljs-number">15</span><br><span class="hljs-keyword">and</span>(country <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;CN&#x27;</span> <span class="hljs-keyword">or</span> country <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;USA&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="SQL-ORDER-BY-关键字"><a href="#SQL-ORDER-BY-关键字" class="headerlink" title="SQL ORDER BY 关键字"></a>SQL ORDER BY 关键字</h2><p>从 “Websites” 表中选取所有网站，并按照 “alexa” 列排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> alexa<br></code></pre></td></tr></table></figure><p>从 “Websites” 表中选取所有网站，并按照 “alexa” 列降序排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> alexa <span class="hljs-keyword">desc</span><br></code></pre></td></tr></table></figure><p>从 “Websites” 表中选取所有网站，并按照 “country” 和 “alexa” 列排序：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> websites<br><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> country,alexa<br></code></pre></td></tr></table></figure><p>向 “Websites” 表中插入一个新行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> websites(name,url,alexa,country)<br><span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;百度&#x27;</span>,<span class="hljs-string">&#x27;https://www.baidu.com&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>,<span class="hljs-string">&#x27;CN&#x27;</span>)<br></code></pre></td></tr></table></figure><p>插入一个新行，但是只在 “name”、”url” 和 “country” 列插入数据（id 字段会自动更新）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> websites(name,url,country)<br><span class="hljs-keyword">values</span> (<span class="hljs-string">&#x27;stackoverflow&#x27;</span>,<span class="hljs-string">&#x27;http://stackoverflow.com/&#x27;</span>,<span class="hljs-string">&#x27;IND&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="SQL-UPDATE-语句"><a href="#SQL-UPDATE-语句" class="headerlink" title="SQL UPDATE 语句"></a>SQL UPDATE 语句</h2><p>把 “菜鸟教程” 的 alexa 排名更新为 5000，country 改为 中国。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> websites<br><span class="hljs-keyword">SET</span> alexa<span class="hljs-operator">=</span><span class="hljs-string">&#x27;5000&#x27;</span>,country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;中国&#x27;</span><br><span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;菜鸟教程&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Update-警告！"><a href="#Update-警告！" class="headerlink" title="Update 警告！"></a>Update 警告！</h3><p>在更新记录时要格外小心！在上面的实例中，如果我们省略了 WHERE 子句，如下所示：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> Websites<br><span class="hljs-keyword">SET</span> alexa<span class="hljs-operator">=</span><span class="hljs-string">&#x27;5000&#x27;</span>, country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;USA&#x27;</span><br></code></pre></td></tr></table></figure><p>执行以上代码会将 Websites 表中所有数据的 alexa 改为 5000，country 改为 USA。</p><p>执行没有 WHERE 子句的 UPDATE 要慎重，再慎重。</p><h2 id="SQL-DELETE-语句"><a href="#SQL-DELETE-语句" class="headerlink" title="SQL DELETE 语句"></a>SQL DELETE 语句</h2><p>从 “Websites” 表中删除网站名为 “Facebook” 且国家为 USA 的网站。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;Facebook&#x27;</span> <span class="hljs-keyword">AND</span> country<span class="hljs-operator">=</span><span class="hljs-string">&#x27;USA&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="删除所有数据"><a href="#删除所有数据" class="headerlink" title="删除所有数据"></a>删除所有数据</h3><p>您可以在不删除表的情况下，删除表中所有的行。这意味着表结构、属性、索引将保持不变：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">FROM</span> table_name;<br></code></pre></td></tr></table></figure><h2 id="SQL-SELECT-TOP-LIMIT-ROWNUM-子句"><a href="#SQL-SELECT-TOP-LIMIT-ROWNUM-子句" class="headerlink" title="SQL SELECT TOP, LIMIT, ROWNUM 子句"></a>SQL SELECT TOP, LIMIT, ROWNUM 子句</h2><p>从 “Websites” 表中选取头两条记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> websites LIMIT <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><h2 id="SQL-LIKE-操作符"><a href="#SQL-LIKE-操作符" class="headerlink" title="SQL LIKE 操作符"></a>SQL LIKE 操作符</h2><p>选取 name 以字母 “G” 开始的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;G%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 以字母 “k” 结尾的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%k&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 包含模式 “oo” 的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%oo%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 不包含模式 “oo” 的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%oo%&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="SQL-通配符"><a href="#SQL-通配符" class="headerlink" title="SQL 通配符"></a>SQL 通配符</h2><h3 id="使用-SQL-通配符"><a href="#使用-SQL-通配符" class="headerlink" title="使用 SQL % 通配符"></a>使用 SQL % 通配符</h3><p>选取 url 以字母 “https” 开始的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> url <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;https%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 url 包含模式 “oo” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> url <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%oo%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 以一个任意字符开始，然后是 “oogle” 的所有客户：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;_oogle&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 以 “G” 开始，然后是一个任意字符，然后是 “o”，然后是一个任意字符，然后是 “le” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;G_o_le&#x27;</span>;<br></code></pre></td></tr></table></figure><h3 id="使用-SQL-charlist-通配符"><a href="#使用-SQL-charlist-通配符" class="headerlink" title="使用 SQL [charlist] 通配符"></a>使用 SQL [charlist] 通配符</h3><p>选取 name 以 “G”、”F” 或 “s” 开始的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name REGEXP <span class="hljs-string">&#x27;^[GFs]&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 以 A 到 H 字母开头的网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name REGEXP <span class="hljs-string">&#x27;^[A-H]&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 不以 A 到 H 字母开头的网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name REGEXP <span class="hljs-string">&#x27;^[^A-H]&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="SQL-IN-操作符"><a href="#SQL-IN-操作符" class="headerlink" title="SQL IN 操作符"></a>SQL IN 操作符</h2><p>选取 name 为 “Google” 或 “菜鸟教程” 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;Google&#x27;</span>,<span class="hljs-string">&#x27;菜鸟教程&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="SQL-BETWEEN-操作符"><a href="#SQL-BETWEEN-操作符" class="headerlink" title="SQL BETWEEN 操作符"></a>SQL BETWEEN 操作符</h2><p>选取 alexa 介于 1 和 20 之间的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> alexa <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><p>如需显示不在上面实例范围内的网站，请使用 NOT BETWEEN：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> alexa <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">20</span>;<br></code></pre></td></tr></table></figure><p>选取 alexa 介于 1 和 20 之间但 country 不为 USA 和 IND 的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> (alexa <span class="hljs-keyword">BETWEEN</span> <span class="hljs-number">1</span> <span class="hljs-keyword">AND</span> <span class="hljs-number">20</span>)<br><span class="hljs-keyword">AND</span> country <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">IN</span> (<span class="hljs-string">&#x27;USA&#x27;</span>, <span class="hljs-string">&#x27;IND&#x27;</span>);<br></code></pre></td></tr></table></figure><p>选取 name 以介于 ‘A’ 和 ‘H’ 之间字母开始的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">BETWEEN</span> <span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;H&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 name 不介于 ‘A’ 和 ‘H’ 之间字母开始的所有网站：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">WHERE</span> name <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-string">&#x27;A&#x27;</span> <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;H&#x27;</span>;<br></code></pre></td></tr></table></figure><p>选取 date 介于 ‘2016-05-10’ 和 ‘2016-05-14’ 之间的所有访问记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> access_log<br><span class="hljs-keyword">WHERE</span> <span class="hljs-type">date</span> <span class="hljs-keyword">BETWEEN</span> <span class="hljs-string">&#x27;2016-05-10&#x27;</span> <span class="hljs-keyword">AND</span> <span class="hljs-string">&#x27;2016-05-14&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="SQL-别名"><a href="#SQL-别名" class="headerlink" title="SQL 别名"></a>SQL 别名</h2><p>指定了两个别名，一个是 name 列的别名，一个是 country 列的别名。<strong>提示：</strong>如果列名称包含空格，要求使用双引号或方括号：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name <span class="hljs-keyword">AS</span> n, country <span class="hljs-keyword">AS</span> c<br><span class="hljs-keyword">FROM</span> Websites;<br></code></pre></td></tr></table></figure><p>把三个列（url、alexa 和 country）结合在一起，并创建一个名为 “site_info” 的别名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> name, CONCAT(url, <span class="hljs-string">&#x27;, &#x27;</span>, alexa, <span class="hljs-string">&#x27;, &#x27;</span>, country) <span class="hljs-keyword">AS</span> site_info<br><span class="hljs-keyword">FROM</span> Websites;<br></code></pre></td></tr></table></figure><p>使用 “Websites” 和 “access_log” 表，并分别为它们指定表别名 “w” 和 “a”（通过使用别名让 SQL 更简短）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> w.name, w.url, a.count, a.date<br><span class="hljs-keyword">FROM</span> Websites <span class="hljs-keyword">AS</span> w, access_log <span class="hljs-keyword">AS</span> a<br><span class="hljs-keyword">WHERE</span> a.site_id<span class="hljs-operator">=</span>w.id <span class="hljs-keyword">and</span> w.name<span class="hljs-operator">=</span>&quot;菜鸟教程&quot;;<br></code></pre></td></tr></table></figure><p>不带别名的相同的 SQL 语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Websites.name, Websites.url, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> Websites, access_log<br><span class="hljs-keyword">WHERE</span> Websites.id<span class="hljs-operator">=</span>access_log.site_id <span class="hljs-keyword">and</span> Websites.name<span class="hljs-operator">=</span>&quot;菜鸟教程&quot;;<br></code></pre></td></tr></table></figure><h2 id="SQL-连接-JOIN"><a href="#SQL-连接-JOIN" class="headerlink" title="SQL 连接(JOIN)"></a>SQL 连接(JOIN)</h2><p>“Websites” 表中的 “<strong>id</strong>“ 列指向 “access_log” 表中的字段 “<strong>site_id</strong>“。上面这两个表是通过 “site_id” 列联系起来的。</p><p>然后，如果我们运行下面的 SQL 语句（包含 INNER JOIN）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Websites.id, Websites.name, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> access_log<br><span class="hljs-keyword">ON</span> Websites.id<span class="hljs-operator">=</span>access_log.site_id;<br></code></pre></td></tr></table></figure><h2 id="SQL-INNER-JOIN-关键字"><a href="#SQL-INNER-JOIN-关键字" class="headerlink" title="SQL INNER JOIN 关键字"></a>SQL INNER JOIN 关键字</h2><p>下面的 SQL 语句将返回所有网站的访问记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Websites.name, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> access_log<br><span class="hljs-keyword">ON</span> Websites.id<span class="hljs-operator">=</span>access_log.site_id<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> access_log.count;<br></code></pre></td></tr></table></figure><h2 id="SQL-LEFT-JOIN-关键字"><a href="#SQL-LEFT-JOIN-关键字" class="headerlink" title="SQL LEFT JOIN 关键字"></a>SQL LEFT JOIN 关键字</h2><p>下面的 SQL 语句将返回所有网站及他们的访问量（如果有的话）。</p><p>以下实例中我们把 Websites 作为左表，access_log 作为右表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Websites.name, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> access_log<br><span class="hljs-keyword">ON</span> Websites.id<span class="hljs-operator">=</span>access_log.site_id<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> access_log.count <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><p><strong>注释：</strong>LEFT JOIN 关键字从左表（Websites）返回所有的行，即使右表（access_log）中没有匹配。</p><h2 id="SQL-RIGHT-JOIN-关键字"><a href="#SQL-RIGHT-JOIN-关键字" class="headerlink" title="SQL RIGHT JOIN 关键字"></a>SQL RIGHT JOIN 关键字</h2><p>下面的 SQL 语句将返回网站的访问记录。</p><p>以下实例中我们把 Websites 作为左表，access_log 作为右表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> websites.name, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> websites <span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span> access_log<br><span class="hljs-keyword">ON</span> access_log.site_id<span class="hljs-operator">=</span>websites.id<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> access_log.count <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><p><strong>注释：</strong>RIGHT JOIN 关键字从右表（access_log）返回所有的行，即使左表（Websites）中没有匹配。</p><h2 id="SQL-FULL-OUTER-JOIN-关键字"><a href="#SQL-FULL-OUTER-JOIN-关键字" class="headerlink" title="SQL FULL OUTER JOIN 关键字"></a>SQL FULL OUTER JOIN 关键字</h2><p>下面的 SQL 语句选取所有网站访问记录。</p><p>MySQL中不支持 FULL OUTER JOIN，你可以在 SQL Server 测试以下实例。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> Websites.name, access_log.count, access_log.date<br><span class="hljs-keyword">FROM</span> Websites<br><span class="hljs-keyword">FULL</span> <span class="hljs-keyword">OUTER</span> <span class="hljs-keyword">JOIN</span> access_log<br><span class="hljs-keyword">ON</span> Websites.id<span class="hljs-operator">=</span>access_log.site_id<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> access_log.count <span class="hljs-keyword">DESC</span>;<br></code></pre></td></tr></table></figure><p><strong>注释：</strong>FULL OUTER JOIN 关键字返回左表（Websites）和右表（access_log）中所有的行。如果 “Websites” 表中的行在 “access_log” 中没有匹配或者 “access_log” 表中的行在 “Websites” 表中没有匹配，也会列出这些行。</p>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
